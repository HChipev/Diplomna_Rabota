generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id           Int        @id @default(autoincrement())
  userId       String
  makeId       Int
  modelId      Int
  engineId     Int
  gearboxId    Int
  drivetrainId Int
  regionId     Int
  cityId       Int
  colorId      Int?
  year         Int
  mileage      Int
  price        Int
  description  String?
  features     Json?
  isOnParts    Boolean
  horsepower   Int
  createdAt    DateTime   @default(now())
  City         City       @relation(fields: [cityId], references: [id])
  Color        Color?     @relation(fields: [colorId], references: [id])
  Drivetrain   Drivetrain @relation(fields: [drivetrainId], references: [id])
  Engine       Engine     @relation(fields: [engineId], references: [id])
  Gearbox      Gearbox    @relation(fields: [gearboxId], references: [id])
  Make         Make       @relation(fields: [makeId], references: [id])
  Model        Model      @relation(fields: [modelId], references: [id])
  Region       Region     @relation(fields: [regionId], references: [id])
  Message      Message[]
}

model Make {
  id    Int     @id @default(autoincrement())
  name  String
  Car   Car[]
  Model Model[]
}

model Model {
  id     Int    @id @default(autoincrement())
  name   String
  makeId Int
  Car    Car[]
  make   Make   @relation(fields: [makeId], references: [id])
}

model Engine {
  id   Int    @id @default(autoincrement())
  name String
  Car  Car[]
}

model Gearbox {
  id   Int    @id @default(autoincrement())
  name String
  Car  Car[]
}

model Drivetrain {
  id   Int    @id @default(autoincrement())
  name String
  Car  Car[]
}

model Region {
  id   Int    @id @default(autoincrement())
  name String
  Car  Car[]
  City City[]
}

model City {
  id       Int    @id @default(autoincrement())
  name     String
  regionId Int
  Car      Car[]
  region   Region @relation(fields: [regionId], references: [id])
}

model Color {
  id   Int    @id @default(autoincrement())
  name String
  Car  Car[]
}

model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  carId     Int
  createdAt DateTime @default(now())
  Car       Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
}
